{% trans_default_domain 'FOSUserBundle' %}

<div class="col-md-8 col-md-offset-2">
    <div class="login-panel panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Rejestracja</h3>
        </div>
        <div class="panel-body">
            <div id="alert" class="alert alert-warning alert-dismissable hidden"></div>
            <form id="register_form" action="{{ path('fos_user_registration_register') }}" {{ form_enctype(form) }} method="POST" class="fos_user_registration_register form-horizontal" name="Form" >
                <div class="form-group">
                    {{ form_label(form.email, null, { 'label_attr': {'class':'col-sm-3 control-label'}}) }}
                    <div class="col-sm-9">
                        {{ form_widget(form.email, { 'type' : 'text', 'attr': {'class':'form-control', 'id' : 'email'}, 'required' : false}) }}
                    </div>
                </div>
                <div class="form-group">
                    {{ form_label(form.username, null, { 'label_attr': {'class':'col-sm-3 control-label'}}) }}
                    <div class="col-sm-9">
                        {{ form_widget(form.username, { 'attr': {'class':'form-control'}, 'required' : false}) }}
                    </div>
                </div>
                <div class="form-group">
                    {{ form_label(form.plainPassword.first, null, { 'label_attr': {'class':'col-sm-3 control-label'}}) }}
                    <div class="col-sm-9">
                        {{ form_widget(form.plainPassword.first, { 'attr': {'class':'form-control'}, 'required' : false}) }}
                    </div>
                </div>
                <div class="form-group">
                    {{ form_label(form.plainPassword.second, null, { 'label_attr': {'class':'col-sm-3 control-label'}}) }}
                    <div class="col-sm-9">
                        {{ form_widget(form.plainPassword.second, { 'attr': {'class':'form-control'}, 'required' : false}) }}
                    </div>
                </div>
                <div class="form-group">
                    {{ form_label(form.question, null, { 'label_attr': {'class':'col-sm-3 control-label'}}) }}
                    <div class="col-sm-9">
                        {{ form_widget(form.question, { 'attr': {'class':'form-control'}, 'required' : false}) }}
                    </div>
                </div>
                <div class="form-group">
                    {{ form_label(form.answer, null, { 'label_attr': {'class':'col-sm-3 control-label'}}) }}
                    <div class="col-sm-9">
                        {{ form_widget(form.answer, { 'attr': {'class':'form-control'}, 'required' : false}) }}
                    </div>
                </div>
                {{form_rest(form)}}
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        {#disabled="disabled"#}
                        <button type="submit" id="form_submit" class="btn btn-lg btn-success">Zarejestruj</button>
                        {#<input class="btn btn-default" type="submit" value="{{ 'registration.submit'|trans }}" />#}
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    $(document).ready(function(){
        var $path = $("#path").text();
        $('#register_form').validate({
            rules: {
                //  'fos_user_registration_form[email]': {
                'email' : {
                    required: true,
                    email:true,
                    remote: $path+'check/email'
                },
                //'fos_user_registration_form[username]': {
                'username' : {
                    required: true,
                    pattern: /^[a-zA-Z][a-zA-Z0-9-_\.]{1,20}$/,
                    remote: $path+'check/username'
                },
                //  'fos_user_registration_form[plainPassword][first]': {
                'plainPassword[first]' : {
                    required: true,
                    pattern: /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s).*$/
                },
                //  'fos_user_registration_form[plainPassword][second]': {
                'plainPassword[second]' : {
                    required: true,
                    pattern: /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s).*$/,
                    equalTo: "#plainPassword_first"
                },
                //'fos_user_registration_form[question]': {
                'question' : {
                    required: true,
                },
                //'fos_user_registration_form[answer]': {
                'answer' : {
                    required: true,
                }
            },
            messages: {
                'email': {
                    required: "Pole jest wymagane",
                    email: "Wprowadź poprawny adres email",
                    remote: "Email jest używany"
                },
                'username': {
                    required: "Pole jest wymagane",
                    pattern: "Wprowadź poprawna nazwę użytkownika",
                    remote: "Nazwa jest zajeta"
                },
                'plainPassword[first]': {
                    required: "Pole jest wymagane",
                    pattern: "Hasło musi zawierać mała literę, duża literę oraz cyfrę"
                },
                'plainPassword[second]': {
                    required: "Pole jest wymagane",
                    pattern: "Hasło musi zawierać mała literę, duża literę oraz cyfrę",
                    equalTo: "Hasła nie zgadzają się"
                },
                'question': {
                    required: "Pole jest wymagane"
                },
                'answer': {
                    required: "Pole jest wymagane"
                }
            }
        });


        $('#register_form').on('keyup blur', function () { // fires on every keyup & blur
            if ($('#register_form').valid()) {                   // checks form for validity
                $('button.btn').prop('disabled', false);        // enables button
            } else {
                $('button.btn').prop('disabled', 'disabled');   // disables button
            }
        });

        $("form").submit(function(e) {
            e.preventDefault();
            var $url = $(this).attr('action');
            var $data = $(this).serialize();


            $.ajax({
                type: "POST",
                cache: false,
                url: $url,
                data: $data,
                success: function(result){
                    var $menu = $(result).find('.nav').html();
                    $(".nav").html($menu);
                    $register = '<div class="alert alert-success alert-dismissable">Rejestracja przebiegła pomyślnie</div>';
                    $(".panel-title").text('Zarejestrowano');
                    $(".panel-body").html($register);

//                    console.log(window.location.pathname);
//                    console.log($(location).attr('href'));
//                    console.log(window.location.host);
//                    console.log(window.location.hostname);
//                    console.log(window.location.origin);


                }
            });
        })
    });
</script>


